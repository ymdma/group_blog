= render "posts/header"

-# フラッシュメッセージなど
.flash
  -# %span
  -#   グループを作成しました
  - if flash[:group_create]
    .flash_one
      %span.alert
        = flash[:group_create]

  - if flash[:group_create_error]
    .flash_one
      %span.alert
        = flash[:group_create_error]

  - if flash[:group_delete]
    .flash_one
      %span.alert
        = flash[:group_delete]


-# メインコンテンツ表示ゾーン
.main_wrap

  - if user_signed_in?   # サインインしている場合
    -# 新規投稿フォーム タブ
    .form_post_wrap
      .form_post_tab

    -# 投稿一覧 タブ
    .contents_wrap
      .contents_tab
    -# 投稿一覧 タブ
    .group_tab

    -# .demo1.hidden
    -#   ようこそ１
    -# .demo2.hidden
    -#   ようこそ２

    -# グループ作成 フォーム
    .form_group_wrap
      .form_group_one
        .form_group_two.hidden
          .form_group_three
            %h2
              新規グループ作成
            = form_for @group, url: groups_path, method: :post, class:"group-create" do |f|
              %h3
                グループ名を入力してください
              .group-name_field
                = f.text_field :group_name, autofocus: true, autocomplete: "グループ名を入力",class:"new-group_name", maxlength: 12
              %h3
                ユーザを選択してください
              %p
                グループに登録したユーザの投稿を表示します
              .group-user-sel_field
                = f.collection_check_boxes :user_ids, User.where.not(id: current_user.id), :id, :name, include_hidden: false
              = f.hidden_field :admin, value:current_user.id
              = f.submit "グループ作成", id: "form_group_submit"
            .em_group-create


          -# グループの削除
          .group_edit-delete
            .group_d-area
              %h3
                グループの削除
              %p
                選択したグループを削除します
              .group_edit-delete_btns
                -# - current_user.groups.each do |group|
                - @del_groups_list.each do |group|
                  .group_d-list
                    -# = link_to "#{group.group_name}", "/groups/#{group.id}", method: :delete
                    %div{id:"#{group.id}"}
                      = group.group_name

            -# グループの削除確認用のモーダル
            .group-modal_one.hidden
              .group-modal
                %span
                  このグループを削除してもよろしいですか？
                .group-modal_btns
                  .group-modal_n
                    取り消す
                  .group-modal_d
                    削除する


    -# Blog 新規投稿フォーム フォーム
    .form_post_one
      .form_post_two.hidden
        .form_post_three
          %h2 投稿フォーム
          .form_post
            %h3
              グループの選択
            %p
              投稿するグループを選択してください

            = form_for @post,url:"/posts" do |f|
              .form_post_group-btns
                - current_user.groups.each do |group|
                  = f.radio_button :group_id, :"#{group.id}", class:"form_post_groups-btn"
                  = f.label :"group_id_#{group.id}", "#{group.group_name}"
                = render partial: 'error_messages', locals: {post:@post , column: "group_id"}

              .title-content
                %h3
                  投稿するブログのタイトル
                = f.text_field :title, class: 'form_post_title', placeholder: 'タイトル', maxlength: 15
                = render partial: 'error_messages', locals: {post: @post, column: "title"}
                %h3
                  本文テキスト
                = f.text_area :content, class: 'form_post_content', placeholder: '本文テキスト', maxlength: 255
                = render partial: 'error_messages', locals: {post: @post, column: "content"}

              .form_post_image_prev
                -# - if @post.image?
                = image_tag "", id: 'post_image-preview'
                = image_tag "times-circle-regular.svg",class:"prev-del hidden"
              .form_post_image
                = f.label :image, class: 'form_post_mask_image' do
                  %span
                    画像のアップロード
                  = fa_icon 'picture-o', class: 'icon'
                  = f.file_field :image, class: "hidden image_prev"
                  -# = image_tag "times-circle-regular.svg",class:"prv-del"

                  -# = f.file_field :image, id:"image_prev", class: 'hidden'


                -#   <img id="avatar_img_prev" src="#" class='hidden' />  <!-- 1行追加 -->
                -# <% if current_user.persisted? && current_user.avatar? %>
                -#   <%= image_tag current_user.avatar.to_s, class: 'avatar_present_img' %>    <!-- classを追加 -->
                -#   <label><%= f.check_box :remove_avatar %> 画像を削除</label>
                -# <% else %>
                -#   <%= image_tag 'no_avatar.png', class: 'avatar_present_img' %>   <!-- classを追加 -->
                -#   <%= f.hidden_field :avatar_cache %>
                -# <% end %>
                -# = f.hidden_field :image_cache

              -# = f.file_field :imager, id: 'post_img'

              .form_post_submit-btn
                = f.button '投稿する',type: "submit" , class: 'form_post_submit'



    -# グループ・ボタンエリア
    .groups_wrap
      .groups
        %h3
          グループの投稿を表示
        %p
          選択したグループの投稿を表示します

        = radio_button_tag "groups","all",type:"radio", class:"group_name"
        = label_tag "groups_all", "#{current_user.name}の投稿", class:"group_name",id:"my_all_posts-btn"

        - current_user.groups.each do |group|
          .group-btn_one
            = link_to root_path, class: "hoge", id:"group_#{group.id}" do
              = radio_button_tag "groups","#{group.group_name}",type:"radio", class:"group_name"
              = label_tag "groups_#{group.group_name}", "#{group.group_name}", class:"group_name"

            .group_users.hidden
              = form_for "", url: "groups/update", method: :patch do |f|
                %h3
                  = f.text_field :group_name, value:"#{group.group_name}"
                = f.submit "グループ名の変更を保存", id:"group_name-edit_submit"

                .foot_group_users_title
                  = group.group_name
                  -# グループメンバー
                .group_users_one
                  .modal_gu_one.hidden
                    .modal_gu
                      %span
                        このメンバーをグループから削除してもよろしいですか？
                      .modal_gu_btns
                        .modal_gu_n
                          取り消す
                        .modal_gu_d
                          削除する
                  - group.group_users.each do |user|
                    %div{id: "/groups/#{user.id}/group_user_destroy"}
                      %p{class:"footer_group_user-btn"}
                        = user.user.name
                      -# = link_to "/groups/#{user.id}/group_user_destroy", method: :delete do
                      .user_option.hidden
                        .prof
                          %pre
                            = user.user.profile
                        - if current_user.id == group.admin
                          .del-user
                            = image_tag "times-circle-regular.svg" ,class:"abc"
                            %p
                              このメンバーをグループ  から外す

                          -# %p{id:"group_add_#{user.user.id}"}
                          -# = user.user.name
                  // 保留中---グループユーザーの追加
                  -# .add_btn
                  -#   +
                  -# .add_user_list.group-user-sel_field
                  -#   -# - group.group_users.each do |user|
                  -#   -#   %p{class:"user_id_#{user.id}"}
                  -#   -#   = user.user.name

                  -#   = f.collection_check_boxes :user_ids, User.where.not(id: group.group_users.user.id), :id, :name, include_hidden: false
                  -# = f.hidden_field :group_id, value:group.id



    -# 投稿一覧 タイル表示
    .contents_one
      .contents_two
        -# = image_tag @image.url
        .contents_three
          -# 以下Ajaxにてcontentを表示



  - else          # サインインしていない場合
    -# サインインフォーム タブ
    .form_signin_wrap
      .form_signin_tab

    -# サインアップフォーム タブ
    .form_signup_wrap
      .form_signup_tab

    .pop-up_lets-signup
      .pop-up_lets-signup_two
        .pop-up_lets-signup_text
          %p
            まずはサインアップしよう！
        .pop-up_lets-signup_arrow
          = fa_icon 'mouse-pointer', class: 'icon'
    .guide_demo-user
      %h3
        デモユーザーを利用してアプリを試す
      %p
        登録をせずにアプリを試すことができます。
      = link_to invite_users_path, method: :post do
        .go-demo
          GO
      -# .demo-btn_maru


    -# サインインフォーム 表示
    .form_signin_one
      .form_signin_two.hidden
        %h2
          ログイン
        -# %p 登録しているユーザーでログイン
        .form_signin
          -# = form_for(resource, as: resource_name, url: session_path(resource_name)) do |f|
          = form_for "", url:login_users_path do |f|
            .field
              .field-label
                = f.label :メールアドレス
              .field-signin-input_email
                = f.email_field :email, autofocus: true
              .field
                .field-label
                  = f.label :パスワード
                  %br
                  %i (英数字6文字以上)
                .field-signin-input_pass
                  = f.password_field :password, autocomplete: "off", minlength: 6, maxlength: 12
              .sign_btn
                = f.submit "ログイン",id:"signin_submit"
        -# = render "devise/shared/links"
        .em_signin


    -# サインアップフォーム
    .form_signup_one
      .form_signup_two.hidden
        %h2
          新規登録
        .form_signup
          = form_for "",url: signup_users_path, method: :post do |f|
            .field
              .field-label
                = f.label :お名前
                %br/
              .field-signup-input_name
                = f.text_field :name, autofocus: true, autocomplete: "name", maxlength: 12
              .field-label
                = f.label :メールアドレス
                %br
              .field-signup-input_email
                = f.email_field :email, autofocus: true, autocomplete: "email"
              .field-label
                = f.label :パスワード
                %br
                %i (英数字6文字以上)
                - if @minimum_password_length
                  %em
                    (#{@minimum_password_length} characters minimum)
                %br/
              .field-signup-input_pass
                = f.password_field :password, autocomplete: "new-password", minlength: 6, maxlength: 12
              .field
                = f.label :パスワードの再入力
                %br
              .field-signup-input_pass_conf
                -# %i 確認の為、パスワードの再入力
                = f.password_field :password_confirmation, autocomplete: "new-password", minlength: 6, maxlength: 12
              .sign_btn
                = f.submit "新規登録",id:"signup_submit"
              .em_signup
          -# = render "devise/shared/links"

    -# .brank_div





= render "posts/footer"